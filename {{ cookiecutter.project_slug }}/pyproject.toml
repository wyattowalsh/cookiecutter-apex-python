[tool.poetry]
name = "{{ cookiecutter.project_name }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.description }}"
authors = ["{{ cookiecutter.author_name }} <{{ cookiecutter.author_email.com }}>"]
license = "GPL-3.0-only"
readme = "README.md"
packages = [{include = "{{ cookiecutter.project_name }}"}]

[tool.poetry.dependencies]
python = "^3.11"

[tool.poetry.group.tests]
optional = true

[tool.poetry.group.tests.dependencies]
pytest = "^7.2.2"
pytest-sugar = "^0.9.6"
pytest-emoji = "^0.2.0"
pytest-html = "^3.2.0"
pytest-icdiff = "^0.6"
pytest-instafail = "^0.4.2"
pytest-timeout = "^2.1.0"
pytest-benchmark = "^4.0.0"
pytest-cov = "^4.0.0"
pytest-xdist = {extras = ["all"], version = "^3.2.0"}
hypothesis = "^6.68.2"
pandera = {extras = ["hypothesis", "io", "strategies", "mypy", "dask", "pyspark"], version="^0"}
pydantic="^1"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^5"
pydata-sphinx-theme = "^0.13.0"
sphinx-copybutton = "^0.5.1"
myst-parser = "^0.19.1"
sphinxcontrib-mermaid = "^0.8.1"
sphinx-git = "^11.0.0"
sphinx-markdown-builder = "^0.5.5"
sphinx-design = "^0.3.0"
sphinx-autobuild = "^2021.3.14"
sphinx-hoverxref = "^1.3.0"
sphinx-sitemap = "^2.5.0"
sphinx-togglebutton = "^0.3.2"
sphinx-favicon = "^0"
sphinxcontrib-jquery = "^2"

[tool.poetry.group.formatters]
optional = true

[tool.poetry.group.docs.formatters]
isort = "^5.12.0"
black = "^23.1.0"
pylint = "^2.16.3"
autoflake = "^2.0.1"
pylama = {extras = ["all"], version = "^8.4.1"}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
addopts = "-n auto --verbose --hypothesis-show-statistics --html=logs/report.html --self-contained-html --emoji --instafail  --cov=nba_db tests/ --cov-append --cov-report html:logs/cov_html"
testpaths = ["tests"]
console_output_style = "progress"
junit_logging = "all"
log_cli = "True"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
log_cli_format = "%(asctime)s - [%(levelname)s] - %(name)s - (%(filename)s).%(funcName)s(%(lineno)d) - %(message)s"
log_cli_level = "DEBUG"
log_date_format = "%Y-%m-%d %H:%M:%S"
log_file = "logs/pytest-logs.txt"
log_file_date_format = "%Y-%m-%d %H:%M:%S"
log_file_format = "%(asctime)s - [%(levelname)s] - %(name)s - (%(filename)s).%(funcName)s(%(lineno)d) - %(message)s"
log_file_level = "DEBUG"
log_format = "%(asctime)s - [%(levelname)s] - %(name)s - (%(filename)s).%(funcName)s(%(lineno)d) - %(message)s"
log_level = "DEBUG"
required_plugins = [
    "pytest-sugar",
    "pytest-html",
    "pytest-emoji",
    "pytest-icdiff",
    "pytest-instafail",
    "pytest-timeout",
    "pytest-benchmark",
    "pytest-cov",
]
timeout = 500

[tool.isort]
profile = "black"
src_paths = ["{{ cookiecutter.project_slug }}", "tests"]

[tool.autoflake]
remove-all-unused-imports = true
remove-unused-variables = true
in-place = true
ignore-init-module-imports = true

[tool.pylama]
skip = "*/.tox/*,*/.env/*"
linters = "eradicate,mccabe,pycodestyle,pyflakes,pylint,isort,pydocstyle"